on:
  push:
    branches: [ main ]

  workflow_dispatch:
  
env:
  FLASK_APP: app.py

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up pyenv
        run: |
          export PYENV_ROOT="$HOME/.pyenv"
          [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
          eval "$(pyenv init -)"
          pyenv activate uni-thesis

      # Setup virtual env, install dependencies
      - name: Create new virtual env and activate it
        run: |
          python3 -m venv quart-env
          source deactivate
          source quart-env/bin/activate
          python3 -m pip install -r requirements.txt
          python3 -m pip install hypercorn

      - name: Build frontend
        run: |
          cd frontend
          npm install
          npm run build
          cd ..

  validate:
    runs-on: self-hosted
    needs: build

    steps:
      - name: Kill hypercorn
        run: pkill hypercorn || true

      - name: Execute application
        run: |
          cp /home/victor/.project_configs/thesis_config.cfg ./config.cfg
          source quart-env/bin/activate
          RUNNER_TRACKING_ID=""
          timeout --preserve-status 15s hypercorn -w 1 -b 127.0.0.1:4000 app:app --log-file=hypercorn.log

  deploy:
    runs-on: self-hosted
    needs: validate
    
    steps:
      # Kill hypercorn server, if running already
      - name: Kill hypercorn
        run: pkill hypercorn || true

      # Run hypercorn server
      - name: Run hypercorn
        run: |
          cp /home/victor/.project_configs/thesis_config.cfg ./config.cfg
          source quart-env/bin/activate
          RUNNER_TRACKING_ID=""
          hypercorn -w 1 -b 127.0.0.1:4000 app:app --log-file=hypercorn.log &
